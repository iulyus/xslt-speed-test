#!/usr/bin/perl

use strict;
use warnings;

use File::Path;

# xml'и складываем в папку xml.

mkpath('xml');

my $N_LABELS = 7;

#######################################################################################################################

write_test("5", 5, \&type0);
write_test("5_", 5, \&type1);
write_test("5ns", 5, \&type2);

write_test("10000", 10000, \&type0);
write_test("10000_", 10000, \&type1);
write_test("10000ns", 10000, \&type2);

write_test("50000", 50000, \&type0);
write_test("50000_", 50000, \&type1);
write_test("50000ns", 50000, \&type2);

#######################################################################################################################

sub write_test {
    my ($filename, $count, $type) = @_;

    my $F;
    open($F, ">xml/$filename.xml");
    print $F (&$type($count));
    close($F);
}

#######################################################################################################################

sub template {
    my ($i) = @_;

    my $label_id = 1 + (($i - 1) % 7);
    return <<TMPL;
        <item id="$i">
            <label id="$label_id"/>
            <subitem id="$i"/>
            <text>text $i</text>
        </item>
TMPL
}

sub type0 {
    my ($count) = @_;

    my $r = <<XML;
<?xml version="1.0" encoding="utf-8"?>

<test xmlns:ya="http://www.yandex.ru">

    <labels>
XML

    for (my $i = 1; $i <= $N_LABELS; $i++) {
        $r .= <<XML;
        <label id="$i">label $i</label>
XML
    }
    $r .= <<XML;
    </labels>

    <items>
XML

    $r .= join('', map { template($_) } 1..$count);

    $r .= <<XML;
    </items>

</test>
XML

    return $r;
}

sub type1 {
    my ($count) = @_;

    my $r = type0($count);
    $r =~ s{>\s+<}{><}gsm;
    $r =~ s{(\?>)}{$1\n\n}sm;

    return $r;
}

sub type2 {
    my ($count) = @_;

    my $r = type0($count);
    $r =~ s{<(\w+)}{<ya:$1}gsm;
    $r =~ s{</(\w+)}{</ya:$1}gsm;

    return $r;
}

#######################################################################################################################

